{
  "name": "CakeBot-action",
  "type": "action",
  "valid": true,
  "status": "Available",
  "created": "2024-06-29T01:57:40.008Z",
  "updated": "2024-06-30T15:07:23.297Z",
  "language": "en",
  "skill_id": "7570e9d1-6045-45ed-adb2-152ebd88d4d8",
  "workspace": {
    "actions": [
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_354",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "To view our store hours, please select a location:"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": true
                },
                {
                  "response_type": "response_from_data_type",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that."
                              }
                            ]
                          }
                        },
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "Sorry, I still didn't understand."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "data_type": "data-type_4253",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_354",
            "next_step": "step_483"
          },
          {
            "step": "step_483",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Our Columbus store is open Monday through Friday, 8am - 8pm."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_483",
            "condition": {
              "eq": [
                {
                  "variable": "step_354"
                },
                {
                  "value": "Columbus",
                  "from_entity": "entity_42229"
                }
              ]
            },
            "next_step": "step_985"
          },
          {
            "step": "step_985",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Our "
                          },
                          {
                            "variable": "step_354"
                          },
                          {
                            "scalar": " store is open Monday through Friday, 9am - 9pm."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_985"
          }
        ],
        "title": "Store hours",
        "action": "action_10355",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_10355_intent_49392"
        },
        "variables": [
          {
            "title": "To view our store hours, please select a location:",
            "privacy": {
              "enabled": false
            },
            "variable": "step_354",
            "data_type": "any"
          },
          {
            "title": "Our Columbus store is open Monday through Friday, 8am - 8pm.",
            "privacy": {
              "enabled": false
            },
            "variable": "step_483",
            "data_type": "any"
          },
          {
            "title": "Our {variable} store is open Monday through Friday, 9am - 9pm.",
            "privacy": {
              "enabled": false
            },
            "variable": "step_985",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_49266",
        "topic_switch": {
          "allowed_from": false,
          "allowed_into": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_388",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Our Cake Club rewards program earns you a $10 gift certificate for every ten cakes you purchase."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_388"
          }
        ],
        "title": "Cake Club",
        "action": "action_12066",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_12066_intent_14855"
        },
        "variables": [
          {
            "title": "Our Cake Club rewards program earns you a $10 gift certificate f",
            "privacy": {
              "enabled": false
            },
            "variable": "step_388",
            "data_type": "any"
          }
        ],
        "launch_mode": "confident",
        "next_action": "action_22951",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": true
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_277",
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "input.original_text"
                  },
                  "skill_variable": "recipe_query_text"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_277",
            "next_step": "step_424"
          },
          {
            "step": "step_424",
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "input.text"
                  },
                  "skill_variable": "recipe_query_text"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_424",
            "condition": {
              "not": {
                "exists": {
                  "skill_variable": "recipe_query_text"
                }
              }
            },
            "next_step": "step_128"
          },
          {
            "step": "step_128",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Sure! I'm looking up a recipe for you.  Please wait a few seconds."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "\"You are a helpful kitchen assistant.  Create a recipe as instructed by the user.\\n\\nInput: \".append(${recipe_query_text}).append(\"\\n\\nOutput: \")"
                  },
                  "skill_variable": "recipe_prompt"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_128",
            "next_step": "step_444"
          },
          {
            "step": "step_444",
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/ml/v1/text/generation",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "fee06cd24334b3cb80a4d75c28882b1bdaf910e93ce214f1a4e0d48840e518de",
                  "match_scenario": 1,
                  "catalog_item_id": "d7fabe7a-0ad7-4f84-bab1-1a3cf15876a2"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "skill_variable": "recipe_prompt"
                      },
                      "parameter": "input"
                    },
                    {
                      "value": {
                        "scalar": "mistralai/mixtral-8x7b-instruct-v01"
                      },
                      "parameter": "model_id"
                    },
                    {
                      "value": {
                        "scalar": "REPLACE WITH YOUR WATSONX ID"
                      },
                      "parameter": "project_id"
                    },
                    {
                      "value": {
                        "scalar": 1000
                      },
                      "parameter": "parameters.max_new_tokens"
                    },
                    {
                      "value": {
                        "scalar": 0
                      },
                      "parameter": "parameters.min_new_tokens"
                    },
                    {
                      "value": {
                        "scalar": "greedy"
                      },
                      "parameter": "parameters.decoding_method"
                    },
                    {
                      "value": {
                        "scalar": 1
                      },
                      "parameter": "parameters.repetition_penalty"
                    }
                  ],
                  "query": [
                    {
                      "value": {
                        "scalar": "2023-05-29"
                      },
                      "parameter": "version"
                    }
                  ]
                },
                "result_variable": "step_444_result_1"
              }
            },
            "variable": "step_444",
            "condition": {
              "exists": {
                "skill_variable": "recipe_query_text"
              }
            },
            "next_step": "step_545"
          },
          {
            "step": "step_545",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Here's your recipe:\n\n\n\n"
                          },
                          {
                            "variable": "step_444_result_1",
                            "variable_path": "body.results[0].generated_text"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_545",
            "condition": {
              "exists": {
                "variable": "step_444_result_1",
                "variable_path": "success"
              }
            }
          }
        ],
        "title": "Show me a recipe for",
        "action": "action_19595",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_19595_intent_29966"
        },
        "variables": [
          {
            "title": "Sure! I'm looking up a recipe for you. Please wait a few seconds",
            "privacy": {
              "enabled": false
            },
            "variable": "step_128",
            "data_type": "any"
          },
          {
            "title": "No response",
            "privacy": {
              "enabled": false
            },
            "variable": "step_277",
            "data_type": "any"
          },
          {
            "title": "No response",
            "privacy": {
              "enabled": false
            },
            "variable": "step_424",
            "data_type": "any"
          },
          {
            "title": "No response",
            "privacy": {
              "enabled": false
            },
            "variable": "step_444",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_444_result_1",
            "data_type": "any"
          },
          {
            "title": "Here's your recipe: {variable}",
            "privacy": {
              "enabled": false
            },
            "variable": "step_545",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_12066",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_229",
            "title": "Payment Method Selection",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Select a payment method:"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "response_type": "response_from_variable",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "max_tries": 3,
              "option_list": {
                "templates": {
                  "label": {
                    "expression": "${item}.name + \" card ending in: \" + ${item}.card_number"
                  }
                },
                "fallback_option": {
                  "label": "None of the above"
                }
              },
              "source_variable": {
                "skill_variable": "payment_method_choices"
              }
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_229",
            "next_step": "step_315"
          },
          {
            "step": "step_315",
            "title": "Write Selected Payment Method",
            "context": {
              "variables": [
                {
                  "value": {
                    "variable": "step_229"
                  },
                  "skill_variable": "payment_method_selected"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_315",
            "next_step": "step_538"
          },
          {
            "step": "step_538",
            "title": "No Payment Method",
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let me transfer you to an agent to collect your payment information."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": "Unable to collect payment. See history ${system_session_history}"
              }
            },
            "variable": "step_538",
            "condition": {
              "contains": [
                {
                  "skill_variable": "payment_method_selected"
                },
                {
                  "scalar": "None of the above",
                  "options": {
                    "ignore_case": true
                  }
                }
              ]
            },
            "next_step": "step_188"
          },
          {
            "step": "step_188",
            "title": "Payment Complete",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Ok, we will be charging "
                          },
                          {
                            "skill_variable": "order_total"
                          },
                          {
                            "scalar": " to your "
                          },
                          {
                            "skill_variable": "payment_method_selected"
                          },
                          {
                            "scalar": "."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_188"
          }
        ],
        "title": "Payment",
        "action": "action_22951",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_22951_intent_1361"
        },
        "variables": [
          {
            "title": "Payment Complete",
            "privacy": {
              "enabled": false
            },
            "variable": "step_188",
            "data_type": "any"
          },
          {
            "title": "Payment Method Selection",
            "privacy": {
              "enabled": false
            },
            "variable": "step_229",
            "data_type": "any"
          },
          {
            "title": "No response",
            "privacy": {
              "enabled": false
            },
            "variable": "step_315",
            "data_type": "any"
          },
          {
            "title": "No Payment Method",
            "privacy": {
              "enabled": false
            },
            "variable": "step_538",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_45936",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_871",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "We offer cakes for many occasions, such as weddings, birthdays, anniversaries, retirement, and all-occasion cakes.\n\n<br />\n\n\n\n**Cake flavors**: chocolate, vanilla, and marble\n\n**Frosting flavors**: chocolate, vanilla, and strawberry."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "time": 3500,
                  "typing": true,
                  "response_type": "pause"
                },
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "*All of our cakes are available as a* [*gluten-free*](https://en.wikipedia.org/wiki/Gluten-free_diet) *option as well.*"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_871"
          }
        ],
        "title": "Cake options",
        "action": "action_35300",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_35300_intent_17360"
        },
        "variables": [
          {
            "title": "We offer cakes for many occasions, such as weddings, birthdays, ",
            "privacy": {
              "enabled": false
            },
            "variable": "step_871",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "fallback",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_337",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I can take your cake order."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_337",
            "next_step": "step_205"
          },
          {
            "step": "step_205",
            "title": "Size",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "What size cake do you need?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "small",
                      "value": {
                        "input": {
                          "text": "small"
                        }
                      }
                    },
                    {
                      "label": "medium",
                      "value": {
                        "input": {
                          "text": "medium"
                        }
                      }
                    },
                    {
                      "label": "large",
                      "value": {
                        "input": {
                          "text": "large"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_40464",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_205",
            "next_step": "step_623"
          },
          {
            "step": "step_623",
            "title": "Occasion",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "What is the occasion?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "birthday",
                      "value": {
                        "input": {
                          "text": "birthday"
                        }
                      }
                    },
                    {
                      "label": "wedding",
                      "value": {
                        "input": {
                          "text": "wedding"
                        }
                      }
                    },
                    {
                      "label": "anniversary",
                      "value": {
                        "input": {
                          "text": "anniversary"
                        }
                      }
                    },
                    {
                      "label": "retirement",
                      "value": {
                        "input": {
                          "text": "retirement"
                        }
                      }
                    },
                    {
                      "label": "all-occasion",
                      "value": {
                        "input": {
                          "text": "all-occasion"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_43725",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_623",
            "next_step": "step_109"
          },
          {
            "step": "step_109",
            "title": "Cake Flavor",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "What flavor cake would you like?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "chocolate",
                      "value": {
                        "input": {
                          "text": "chocolate"
                        }
                      }
                    },
                    {
                      "label": "vanilla",
                      "value": {
                        "input": {
                          "text": "vanilla"
                        }
                      }
                    },
                    {
                      "label": "marble",
                      "value": {
                        "input": {
                          "text": "marble"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_31539",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_109",
            "next_step": "step_167"
          },
          {
            "step": "step_167",
            "title": "Frosting Flavor",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Which frosting would you like?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "chocolate",
                      "value": {
                        "input": {
                          "text": "chocolate"
                        }
                      }
                    },
                    {
                      "label": "vanilla",
                      "value": {
                        "input": {
                          "text": "vanilla"
                        }
                      }
                    },
                    {
                      "label": "strawberry",
                      "value": {
                        "input": {
                          "text": "strawberry"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_1921",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_167",
            "next_step": "step_664"
          },
          {
            "step": "step_664",
            "title": "Gluten free requested",
            "output": {
              "generic": [
                {
                  "options": [
                    {
                      "label": "gluten free",
                      "value": {
                        "input": {
                          "text": "gluten free"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_15789",
              "max_tries": 3,
              "allow_topic_switch": false,
              "response_collection_behavior": "never_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_664",
            "next_step": "step_975"
          },
          {
            "step": "step_975",
            "title": "Order Confirmation",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Ok, I've got you down for a "
                          },
                          {
                            "variable": "step_664"
                          },
                          {
                            "scalar": " "
                          },
                          {
                            "variable": "step_205"
                          },
                          {
                            "scalar": " "
                          },
                          {
                            "variable": "step_109"
                          },
                          {
                            "scalar": " "
                          },
                          {
                            "variable": "step_623"
                          },
                          {
                            "scalar": " cake with "
                          },
                          {
                            "variable": "step_167"
                          },
                          {
                            "scalar": " frosting.  Is that correct?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    },
                    {
                      "label": "No",
                      "value": {
                        "input": {
                          "text": "No"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "Sorry, I didn't get that.  Is your cake order correct?"
                              }
                            ]
                          }
                        },
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I still didn't get that.  Are you ready to place your order?"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-yes-no",
              "max_tries": 3,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_975",
            "next_step": "step_494"
          },
          {
            "step": "step_494",
            "title": "Order Confirmed",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Great.  Your order has been accepted.\n\nYour order subtotal is $"
                          },
                          {
                            "skill_variable": "order_subtotal"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "variable": "step_205"
                  },
                  "skill_variable": "cake_size"
                },
                {
                  "value": {
                    "variable": "step_623"
                  },
                  "skill_variable": "cake_occasion"
                },
                {
                  "value": {
                    "variable": "step_109"
                  },
                  "skill_variable": "cake_flavor"
                },
                {
                  "value": {
                    "variable": "step_167"
                  },
                  "skill_variable": "cake_frosting"
                },
                {
                  "value": {
                    "variable": "step_664"
                  },
                  "skill_variable": "gluten_free"
                },
                {
                  "value": {
                    "expression": "(${cake_size} == \"small\" ? 10 : \"\" || ${cake_size} == \"medium\" ? 20 : 30)"
                  },
                  "skill_variable": "order_subtotal"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "action_45936",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_494_result_1"
              }
            },
            "variable": "step_494",
            "condition": {
              "eq": [
                {
                  "variable": "step_975"
                },
                {
                  "scalar": "yes"
                }
              ]
            },
            "next_step": "step_990"
          },
          {
            "step": "step_990",
            "title": "Order Not Confirmed",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "No problem.  What would you like to do?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Start over",
                      "value": {
                        "input": {
                          "text": "Start over"
                        }
                      }
                    },
                    {
                      "label": "Cancel my order",
                      "value": {
                        "input": {
                          "text": "Cancel my order"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_38707",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_990",
            "condition": {
              "eq": [
                {
                  "variable": "step_975"
                },
                {
                  "scalar": "no"
                }
              ]
            },
            "next_step": "step_854"
          },
          {
            "step": "step_854",
            "title": "Cancel Order",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Your order has been cancelled."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_854",
            "condition": {
              "eq": [
                {
                  "variable": "step_990"
                },
                {
                  "value": "Cancel my order",
                  "from_entity": "entity_38707"
                }
              ]
            },
            "next_step": "step_267"
          },
          {
            "step": "step_267",
            "title": "Start Over",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Ok, let's start over."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "replay",
              "clear": [
                {
                  "variable": "step_205"
                },
                {
                  "variable": "step_623"
                },
                {
                  "variable": "step_109"
                },
                {
                  "variable": "step_167"
                },
                {
                  "variable": "step_664"
                },
                {
                  "variable": "step_975"
                },
                {
                  "variable": "step_494"
                },
                {
                  "variable": "step_990"
                },
                {
                  "variable": "step_854"
                }
              ]
            },
            "variable": "step_267",
            "condition": {
              "eq": [
                {
                  "variable": "step_990"
                },
                {
                  "value": "Start over",
                  "from_entity": "entity_38707"
                }
              ]
            }
          }
        ],
        "title": "Order a cake",
        "action": "action_40029",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_40029_intent_13125"
        },
        "variables": [
          {
            "title": "What flavor cake would you like?",
            "privacy": {
              "enabled": false
            },
            "variable": "step_109",
            "data_type": "any"
          },
          {
            "title": "Which frosting would you like?",
            "privacy": {
              "enabled": false
            },
            "variable": "step_167",
            "data_type": "any"
          },
          {
            "title": "What size cake do you need?",
            "privacy": {
              "enabled": false
            },
            "variable": "step_205",
            "data_type": "any"
          },
          {
            "title": "Start Over",
            "privacy": {
              "enabled": false
            },
            "variable": "step_267",
            "data_type": "any"
          },
          {
            "title": "I can take your cake order.",
            "privacy": {
              "enabled": false
            },
            "variable": "step_337",
            "data_type": "any"
          },
          {
            "title": "Order Confirmed",
            "privacy": {
              "enabled": false
            },
            "variable": "step_494",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_494_result_1",
            "data_type": "any"
          },
          {
            "title": "What is the occasion?",
            "privacy": {
              "enabled": false
            },
            "variable": "step_623",
            "data_type": "any"
          },
          {
            "title": "Gluten free requested",
            "privacy": {
              "enabled": false
            },
            "variable": "step_664",
            "data_type": "any"
          },
          {
            "title": "Your order has been cancelled.",
            "privacy": {
              "enabled": false
            },
            "variable": "step_854",
            "data_type": "any"
          },
          {
            "title": "Order Confirmation",
            "privacy": {
              "enabled": false
            },
            "variable": "step_975",
            "data_type": "yes_no"
          },
          {
            "title": "No problem. What would you like to do?",
            "privacy": {
              "enabled": false
            },
            "variable": "step_990",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_10355",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_179",
            "title": "Select Pickup or Delivery",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Would you like to schedule your order for pickup or delivery?\n\nPlease note there is a $5 delivery fee."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "pickup",
                      "value": {
                        "input": {
                          "text": "pickup"
                        }
                      }
                    },
                    {
                      "label": "delivery",
                      "value": {
                        "input": {
                          "text": "delivery"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_2943",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_179",
            "next_step": "step_615"
          },
          {
            "step": "step_615",
            "title": "Calculate order total for delivery",
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${order_subtotal} + 5"
                  },
                  "skill_variable": "order_total"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_615",
            "condition": {
              "eq": [
                {
                  "variable": "step_179"
                },
                {
                  "value": "delivery",
                  "from_entity": "entity_2943"
                }
              ]
            },
            "next_step": "step_696"
          },
          {
            "step": "step_696",
            "title": "Pickup Location",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Which store will you pick up from?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "response_type": "response_from_data_type",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "skill_variable": "order_subtotal"
                  },
                  "skill_variable": "order_total"
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "data_type": "data-type_4253",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_696",
            "condition": {
              "eq": [
                {
                  "variable": "step_179"
                },
                {
                  "value": "pickup",
                  "from_entity": "entity_2943"
                }
              ]
            },
            "next_step": "step_371"
          },
          {
            "step": "step_371",
            "title": "Select Date",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "The earliest we can have your order ready for "
                          },
                          {
                            "variable": "step_179"
                          },
                          {
                            "scalar": " is "
                          },
                          {
                            "skill_variable": "next_bus_day_reformat"
                          },
                          {
                            "scalar": ".  Please select a date."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "response_type": "date",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${next_bus_day}.reformatDateTime('EEEE,  MMMM dd, yyyy')"
                  },
                  "skill_variable": "next_bus_day_reformat"
                }
              ]
            },
            "handlers": [
              {
                "type": "input_validation",
                "title": "input_validation_handler_1",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "We are open Monday through Friday.  Please select another date."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "input_validation_handler_1",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_handler",
                "input_constraints": [
                  {
                    "name": "minimum",
                    "value": {
                      "add": [
                        {
                          "system_variable": "current_date"
                        },
                        {
                          "duration": {
                            "days": 1
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "day_of_the_week",
                    "value": {
                      "collection": [
                        {
                          "scalar": 1
                        },
                        {
                          "scalar": 2
                        },
                        {
                          "scalar": 3
                        },
                        {
                          "scalar": 4
                        },
                        {
                          "scalar": 5
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "We are open Monday through Friday.  Please select another date."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-date",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_371",
            "next_step": "step_698"
          },
          {
            "step": "step_698",
            "title": "Phone Number",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please provide a phone number where you can be reached."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_19775",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_698",
            "next_step": "step_757"
          },
          {
            "step": "step_757",
            "title": "Complete Pickup Order",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Your order is scheduled for pickup on "
                          },
                          {
                            "variable": "step_371"
                          },
                          {
                            "scalar": " from our "
                          },
                          {
                            "variable": "step_696"
                          },
                          {
                            "scalar": " location.\n\n<br />\n\n\n\nYour order total is "
                          },
                          {
                            "skill_variable": "order_total"
                          },
                          {
                            "scalar": "\n\n<br />\n\n\n\nOrder Details: "
                          },
                          {
                            "skill_variable": "cake_size"
                          },
                          {
                            "scalar": " "
                          },
                          {
                            "skill_variable": "gluten_free"
                          },
                          {
                            "scalar": " "
                          },
                          {
                            "skill_variable": "cake_flavor"
                          },
                          {
                            "scalar": " "
                          },
                          {
                            "skill_variable": "cake_occasion"
                          },
                          {
                            "scalar": " cake with "
                          },
                          {
                            "skill_variable": "cake_frosting"
                          },
                          {
                            "scalar": " frosting."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "action_22951",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_757_result_1"
              }
            },
            "variable": "step_757",
            "condition": {
              "eq": [
                {
                  "variable": "step_179"
                },
                {
                  "value": "pickup",
                  "from_entity": "entity_2943"
                }
              ]
            },
            "next_step": "step_499"
          },
          {
            "step": "step_499",
            "title": "Complete Delivery Order",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Let me connect you with an agent to collect your delivery address and payment information.\n\n<br />\n\n\n\nYour order total is "
                          },
                          {
                            "skill_variable": "order_total"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Order Details: "
                          },
                          {
                            "skill_variable": "cake_size"
                          },
                          {
                            "scalar": " "
                          },
                          {
                            "skill_variable": "gluten_free"
                          },
                          {
                            "scalar": " "
                          },
                          {
                            "skill_variable": "cake_flavor"
                          },
                          {
                            "scalar": " "
                          },
                          {
                            "skill_variable": "cake_occasion"
                          },
                          {
                            "scalar": " cake with "
                          },
                          {
                            "skill_variable": "cake_frosting"
                          },
                          {
                            "scalar": " frosting."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "One moment while I transfer you"
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": "Schedule delivery for ${step_371}.  Customer contact number: ${step_698} Conv History: ${system_session_history}"
              }
            },
            "variable": "step_499",
            "condition": {
              "eq": [
                {
                  "variable": "step_179"
                },
                {
                  "value": "delivery",
                  "from_entity": "entity_2943"
                }
              ]
            }
          }
        ],
        "title": "Pickup or Delivery",
        "action": "action_45936",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_45936_intent_35602"
        },
        "variables": [
          {
            "title": "Select Pickup or Delivery",
            "privacy": {
              "enabled": false
            },
            "variable": "step_179",
            "data_type": "any"
          },
          {
            "title": "Select Date",
            "privacy": {
              "enabled": false
            },
            "variable": "step_371",
            "data_type": "date"
          },
          {
            "title": "Complete Delivery Order",
            "privacy": {
              "enabled": false
            },
            "variable": "step_499",
            "data_type": "any"
          },
          {
            "title": "No response",
            "privacy": {
              "enabled": false
            },
            "variable": "step_615",
            "data_type": "any"
          },
          {
            "title": "Pickup Location",
            "privacy": {
              "enabled": false
            },
            "variable": "step_696",
            "data_type": "any"
          },
          {
            "title": "Phone Number",
            "privacy": {
              "enabled": false
            },
            "variable": "step_698",
            "data_type": "any"
          },
          {
            "title": "Complete Pickup Order",
            "privacy": {
              "enabled": false
            },
            "variable": "step_757",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_757_result_1",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_40029",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_242",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I'm happy to help.  Let me know if you need anything else."
                          }
                        ]
                      }
                    },
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "You're welcome.  Please let me know if you need something else."
                          }
                        ]
                      }
                    },
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "No problem.  I'm here if you have more questions."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "random"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_242"
          }
        ],
        "title": "Thank you",
        "action": "action_49266",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_49266_intent_32071"
        },
        "variables": [
          {
            "title": "I'm happy to help. Let me know if you need anything else.",
            "privacy": {
              "enabled": false
            },
            "variable": "step_242",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_35300",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_507",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Founded by Grandma Cake in 1980, we've made over 10,000 cakes for local residents!"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_507"
          }
        ],
        "title": "Tell me about Cake Shop",
        "action": "action_6913",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_6913_intent_44271"
        },
        "variables": [
          {
            "title": "Founded by Grandma Cake in 1980, we've made over 10,000 cakes fo",
            "privacy": {
              "enabled": false
            },
            "variable": "step_507",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_19595",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_250",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Our cakes typically cost around $30, with a $5 delivery fee."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_250"
          }
        ],
        "title": "How much does a cake cost?",
        "action": "action_7594",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_7594_intent_41220"
        },
        "variables": [
          {
            "title": "Our cakes typically cost around $30, with a $5 delivery fee.",
            "privacy": {
              "enabled": false
            },
            "variable": "step_250",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_6913",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I'm afraid I don't understand. Please rephrase your question."
                          }
                        ]
                      }
                    },
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I'm afraid I STILL don't understand. Please rephrase your question."
                          }
                        ]
                      }
                    },
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Count 3 dont understand"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001",
            "condition": {
              "lte": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": []
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "fallback",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_002_result_1"
              }
            },
            "variable": "step_002",
            "condition": {
              "gt": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            }
          }
        ],
        "title": "No action matches",
        "action": "anything_else",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "anything_else"
        },
        "variables": [
          {
            "title": "I'm afraid I don't understand. Please rephrase your question.",
            "privacy": {
              "enabled": false
            },
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "title": "",
            "privacy": {
              "enabled": false
            },
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_002_result_1",
            "data_type": "any"
          }
        ],
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "digression_failure",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't confirm if you wanted to return to previous topic, let me connect to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "digression_failure",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Failed to confirm topic return"
                }
              ]
            },
            "next_step": "step_001"
          },
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I'm afraid I don't understand. I can connect you to an agent."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_001",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Step validation failed"
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Sorry I couldn't assist you. I will connect you to an agent right away."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_002",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Agent requested"
                }
              ]
            },
            "next_step": "step_003"
          },
          {
            "step": "step_003",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I am afraid I do not understand what you are asking, let me connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_003",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "No action matches"
                }
              ]
            },
            "next_step": "step_004"
          },
          {
            "step": "step_004",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_004",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Danger word detected"
                }
              ]
            },
            "next_step": "step_005"
          },
          {
            "step": "step_005",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_005",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Profanity detected"
                }
              ]
            }
          }
        ],
        "title": "Fallback",
        "action": "fallback",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "fallback_connect_to_agent"
        },
        "variables": [
          {
            "title": "Topic return failed",
            "variable": "digression_failure",
            "data_type": "any"
          },
          {
            "title": "I'm afraid I don't understand. I can connect you to an agent.",
            "privacy": {
              "enabled": false
            },
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "title": "Sorry I couldn't assist you. I will connect you to an agent righ",
            "privacy": {
              "enabled": false
            },
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "title": "I am afraid I do not understand what you are asking, let me conn",
            "variable": "step_003",
            "data_type": "any"
          },
          {
            "title": "It seems this conversation would be best managed",
            "variable": "step_004",
            "data_type": "any"
          },
          {
            "title": "Profanity - It seems this conversation",
            "variable": "step_005",
            "data_type": "any"
          }
        ],
        "next_action": "run_always",
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "danger_word_detected",
            "title": "Connect to agent",
            "handlers": [],
            "resolver": {
              "type": "fallback"
            },
            "variable": "danger_word_detected_variable",
            "condition": {
              "entity": "danger_words"
            },
            "next_step": "profanity_detected"
          },
          {
            "step": "profanity_detected",
            "title": "Show warning",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please use appropriate language when interacting with the assistant."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [
              {
                "type": "max_hits",
                "handler": "max_hits_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "max_hits": 2,
            "resolver": {
              "type": "end_action"
            },
            "variable": "profanity_detected_variable",
            "condition": {
              "entity": "profane_words"
            }
          }
        ],
        "title": "Trigger word detected",
        "action": "run_always",
        "boosts": [],
        "handlers": [],
        "variables": [
          {
            "title": "Profanity detected",
            "variable": "danger_word_detected_variable",
            "data_type": "any"
          },
          {
            "title": "Profane word detected",
            "variable": "profanity_detected_variable",
            "data_type": "any"
          }
        ],
        "next_action": "anything_else"
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Welcome to Cake Bot.  How can I help you?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001"
          }
        ],
        "title": "Greet customer",
        "action": "welcome",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "welcome"
        },
        "variables": [
          {
            "title": "Welcome to Cake Bot. How can I help you?",
            "privacy": {
              "enabled": false
            },
            "variable": "step_001",
            "data_type": "any"
          }
        ],
        "next_action": "action_7594",
        "disambiguation_opt_out": true
      }
    ],
    "intents": [
      {
        "intent": "action_10355_intent_49392",
        "examples": [
          {
            "text": "Store hours"
          },
          {
            "text": "what are your store hours"
          },
          {
            "text": "when are you open"
          }
        ]
      },
      {
        "intent": "action_12066_intent_14855",
        "examples": [
          {
            "text": "Cake Club"
          },
          {
            "text": "cake rewards"
          },
          {
            "text": "Do you have any special promotions or discounts right now?"
          }
        ]
      },
      {
        "intent": "action_19595_intent_29966",
        "examples": [
          {
            "text": "how can I make"
          },
          {
            "text": "instructions to cook a meal"
          },
          {
            "text": "Show me a recipe for"
          },
          {
            "text": "tell me how to bake a"
          }
        ]
      },
      {
        "intent": "action_22951_intent_1361",
        "examples": []
      },
      {
        "intent": "action_35300_intent_17360",
        "examples": [
          {
            "text": "cake options"
          },
          {
            "text": "Do you make wedding cakes"
          },
          {
            "text": "What kinds of cakes do you sell"
          }
        ]
      },
      {
        "intent": "action_40029_intent_13125",
        "examples": [
          {
            "text": "Can I get a birthday cake"
          },
          {
            "text": "can i order a retirement cake"
          },
          {
            "text": "how do i order cakes"
          },
          {
            "text": "I want to place an order"
          },
          {
            "text": "Order a cake"
          }
        ]
      },
      {
        "intent": "action_45936_intent_35602",
        "examples": []
      },
      {
        "intent": "action_49266_intent_32071",
        "examples": [
          {
            "text": "thanks"
          },
          {
            "text": "Thank you"
          }
        ]
      },
      {
        "intent": "action_6913_intent_44271",
        "examples": [
          {
            "text": "History of Cake Shop"
          },
          {
            "text": "Tell me about Cake Shop"
          },
          {
            "text": "What's the background on your business?"
          }
        ]
      },
      {
        "intent": "action_7594_intent_41220",
        "examples": [
          {
            "text": "How much does a cake cost?"
          },
          {
            "text": "Is there a minimum order value?"
          },
          {
            "text": "Is there a surcharge for delivery?"
          }
        ]
      },
      {
        "intent": "fallback_connect_to_agent",
        "examples": [
          {
            "text": "Agent help"
          },
          {
            "text": "Call agent"
          },
          {
            "text": "Can I connect to an agent?"
          },
          {
            "text": "I would like to speak to a human"
          },
          {
            "text": "I would like to speak to someone"
          }
        ],
        "description": "Please transfer me to an agent"
      }
    ],
    "entities": [
      {
        "entity": "danger_words",
        "values": [
          {
            "type": "synonyms",
            "value": "hurt",
            "synonyms": []
          }
        ],
        "fuzzy_match": false
      },
      {
        "entity": "entity_15789",
        "values": [
          {
            "type": "synonyms",
            "value": "gluten free",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_1921",
        "values": [
          {
            "type": "synonyms",
            "value": "chocolate",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "strawberry",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "vanilla",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_19775",
        "values": [
          {
            "type": "patterns",
            "value": "Phone number",
            "patterns": [
              "\\b(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\b"
            ]
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_2943",
        "values": [
          {
            "type": "synonyms",
            "value": "delivery",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "pickup",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_31539",
        "values": [
          {
            "type": "synonyms",
            "value": "chocolate",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "marble",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "vanilla",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_38707",
        "values": [
          {
            "type": "synonyms",
            "value": "Cancel my order",
            "synonyms": [
              "cancel"
            ]
          },
          {
            "type": "synonyms",
            "value": "Start over",
            "synonyms": [
              "restart"
            ]
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_40464",
        "values": [
          {
            "type": "synonyms",
            "value": "large",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "medium",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "small",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_42229",
        "values": [
          {
            "type": "synonyms",
            "value": "Columbus",
            "synonyms": [
              "downtown"
            ]
          },
          {
            "type": "synonyms",
            "value": "Dublin",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Grandview",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Westerville",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_43725",
        "values": [
          {
            "type": "synonyms",
            "value": "all-occasion",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "anniversary",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "birthday",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "retirement",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "wedding",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "profane_words",
        "values": [
          {
            "type": "synonyms",
            "value": "Darn",
            "synonyms": []
          }
        ],
        "fuzzy_match": false
      },
      {
        "entity": "sys-date",
        "values": []
      },
      {
        "entity": "sys-yes-no",
        "values": []
      }
    ],
    "metadata": {
      "skill": {
        "counts": {
          "actions": 11,
          "intents": 8,
          "entities": 13,
          "data_types": 1,
          "collections": 1,
          "global_variables": 11
        }
      },
      "api_version": {
        "major_version": "v2",
        "minor_version": "2018-11-08"
      }
    },
    "variables": [
      {
        "title": "cake_flavor",
        "privacy": {
          "enabled": false
        },
        "variable": "cake_flavor",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "cake_frosting",
        "privacy": {
          "enabled": false
        },
        "variable": "cake_frosting",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "cake_occasion",
        "privacy": {
          "enabled": false
        },
        "variable": "cake_occasion",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "cake_size",
        "privacy": {
          "enabled": false
        },
        "variable": "cake_size",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "gluten_free",
        "privacy": {
          "enabled": false
        },
        "variable": "gluten_free",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "next_bus_day",
        "privacy": {
          "enabled": false
        },
        "variable": "next_bus_day",
        "data_type": "date",
        "description": "",
        "initial_value": {
          "expression": "(${system_current_date}.reformatDateTime('E') ==\n\"Fri\" ? ${system_current_date}.plusDays(3) : \"\" ||\n${system_current_date}.reformatDateTime('E') == \"Sat\" ?\n${system_current_date}.plusDays(2) : ${system_current_date}.plusDays(1))"
        }
      },
      {
        "title": "next_bus_day_reformat",
        "privacy": {
          "enabled": false
        },
        "variable": "next_bus_day_reformat",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "order_subtotal",
        "privacy": {
          "enabled": false
        },
        "variable": "order_subtotal",
        "data_type": "currency",
        "description": ""
      },
      {
        "title": "order_total",
        "privacy": {
          "enabled": false
        },
        "variable": "order_total",
        "data_type": "currency",
        "description": ""
      },
      {
        "title": "payment_method_choices",
        "privacy": {
          "enabled": false
        },
        "variable": "payment_method_choices",
        "data_type": "any",
        "description": "",
        "initial_value": {
          "expression": "[{\"name\":\"Visa\",\"card_number\":\"1234\"},{\"name\":\"Visa\",\"card_number\":\"5678\"},{\"name\":\"Mastercard\",\"card_number\":\"1015\"}]"
        }
      },
      {
        "title": "payment_method_selected",
        "privacy": {
          "enabled": false
        },
        "variable": "payment_method_selected",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "recipe_prompt",
        "privacy": {
          "enabled": false
        },
        "variable": "recipe_prompt",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "recipe_query_text",
        "privacy": {
          "enabled": false
        },
        "variable": "recipe_query_text",
        "data_type": "string",
        "description": ""
      }
    ],
    "data_types": [
      {
        "title": "Store Locations",
        "entity": "entity_42229",
        "response": {
          "options": [
            {
              "label": "Columbus",
              "value": {
                "input": {
                  "text": "Columbus"
                }
              }
            },
            {
              "label": "Dublin",
              "value": {
                "input": {
                  "text": "Dublin"
                }
              }
            },
            {
              "label": "Westerville",
              "value": {
                "input": {
                  "text": "Westerville"
                }
              }
            },
            {
              "label": "Grandview",
              "value": {
                "input": {
                  "text": "Grandview"
                }
              }
            }
          ],
          "response_type": "option"
        },
        "data_type": "data-type_4253"
      }
    ],
    "collections": [
      {
        "title": "Subactions",
        "collection": "collection_4769",
        "action_references": [
          {
            "action": "action_45936"
          },
          {
            "action": "action_22951"
          }
        ]
      }
    ],
    "counterexamples": [
      {
        "text": "is it raining"
      }
    ],
    "system_settings": {
      "nlp": {
        "model": "latest"
      },
      "variable": {
        "format": {
          "time": {
            "pattern": "short"
          },
          "currency": {
            "fraction_digits": 2
          }
        }
      },
      "off_topic": {
        "enabled": true
      },
      "auto_learn": {
        "apply": true
      },
      "launch_mode": {
        "default": "learning",
        "enabled": false,
        "learning": {
          "step_retry_threshold": 2,
          "use_connect_to_support": "more_often",
          "single_answer_clarification": "more_often",
          "disambiguation_clarification": "more_often"
        },
        "confident": {
          "step_retry_threshold": 4,
          "use_connect_to_support": "sometimes",
          "single_answer_clarification": "sometimes",
          "disambiguation_clarification": "sometimes"
        }
      },
      "topic_switch": {
        "enabled": true,
        "messages": {
          "enable_confirmation": true,
          "confirmation_failure": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "I'm sorry, I did not catch that, please confirm."
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              }
            ]
          },
          "confirmation_request": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "Do you want to continue with the previous topic: "
                        },
                        {
                          "system_variable": "digressed_from"
                        },
                        {
                          "scalar": "?"
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              },
              {
                "options": [
                  {
                    "label": "Yes",
                    "value": {
                      "input": {
                        "text": "Yes"
                      }
                    }
                  },
                  {
                    "label": "No",
                    "value": {
                      "input": {
                        "text": "No"
                      }
                    }
                  }
                ],
                "response_type": "option",
                "repeat_on_reprompt": true
              }
            ]
          }
        },
        "max_tries": 3
      },
      "generative_ai": {
        "slot_filling": {
          "enabled": false
        }
      },
      "disambiguation": {
        "prompt": "Did you mean:",
        "enabled": true,
        "randomize": true,
        "max_suggestions": 5,
        "suggestion_text_policy": "title",
        "none_of_the_above_prompt": "None of the above",
        "use_connect_to_support_prompt": "Connect to support",
        "single_answer_clarification_prompt": "Something else"
      },
      "spelling_auto_correct": true
    },
    "learning_opt_out": false
  },
  "description": "created for assistant 02fa416d-0756-4753-b7e7-27bc0381c767",
  "assistant_id": "3da42410-f0e8-4816-9093-7f668b93d716",
  "workspace_id": "7570e9d1-6045-45ed-adb2-152ebd88d4d8",
  "dialog_settings": {},
  "next_snapshot_version": "1",
  "environment_id": "137c34af-4c95-4fa9-ad23-329019d6648f"
}